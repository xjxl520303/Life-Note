{
  "format": "svg",
  "noFill": true,
  "fill": "#ffffff",
  "pixel_per_pt": 5,
  "search_system": false,
  "override_math": true,
  "font_families": [
    "lxgw wenkai mono",
    "times new roman",
    "songti sc",
    "songti tc",
    "simsun"
  ],
  "preamable": {
    "shared": "#set page(width: WIDTH, height: HEIGHT)\n#let foreground = if THEME == \"dark\" { white } else { rgb(27,28,34)}\n#set text(fill: foreground, size: SIZE, font: (\"LXGW WenKai Mono\", \"Times New Roman\", \"Songti SC\", \"Songti TC\", \"SimSun\"))\n\n#let exec-code(cc, res: none, scope: (:), eval: eval) = {\n  rect(\n    width: 100%,\n    inset: 10pt,\n    {\n      // Don't corrupt normal headings\n      set heading(outlined: false)\n\n      if res != none {\n        res\n      } else {\n        eval(cc.text, mode: \"markup\", scope: scope)\n      }\n    },\n  )\n}\n\n// al: alignment\n#let code(cc, code-as: none, res: none, scope: (:), eval: eval, exec-code: exec-code, al: left) = {\n  let code-as = if code-as == none {\n    cc\n  } else {\n    code-as\n  }\n\n  let vv = exec-code(cc, res: res, scope: scope, eval: eval)\n  if al == left {\n    layout(lw => style(styles => {\n      let width = lw.width * 0.5 - 0.5em\n      let u = box(width: width, code-as)\n      let v = box(width: width, vv)\n\n      let u-box = measure(u, styles)\n      let v-box = measure(v, styles)\n\n      let height = calc.max(u-box.height, v-box.height)\n      stack(\n        dir: ltr,\n        {\n          set rect(height: height)\n          u\n        },\n        1em,\n        {\n          rect(height: height, width: width, inset: 10pt, stroke: foreground , vv.body)\n        },\n      )\n    }))\n  } else {\n    code-as\n    vv\n  }\n}",
    "math": "#set page(margin: 0pt)\n#set align(horizon)",
    "code": "#set page(margin: (y: 1em, x: 0pt))"
  },
  "plugin_version": "0.10.0",
  "autoDownloadPackages": true
}